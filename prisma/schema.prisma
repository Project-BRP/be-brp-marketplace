// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String   @id @map("id")
  email          String   @unique @map("email")
  password       String   @map("password")
  name           String   @map("name")
  profilePicture String?  @map("profile_picture")
  role           Role     @default(USER) @map("role")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id                     String   @id @map("id")
  name                   String   @map("name")
  description            String   @map("description")
  productTypeId          String?  @map("product_type_id")
  composition            String   @map("composition")
  imageUrl               String   @map("image_url")
  storageInstructions    String   @map("storage_instructions")
  expiredDurationInYears Int      @map("expired_duration_in_years")
  usageInstructions      String   @map("usage_instructions")
  benefits               String   @map("benefits")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @updatedAt @map("updated_at")

  productType     ProductType?     @relation(fields: [productTypeId], references: [id], onDelete: SetNull)
  productVariants ProductVariant[]

  @@map("products")
}

model ProductVariant {
  id           String   @id @map("id")
  productId    String   @map("product_id")
  weight_in_kg Int      @map("weight_in_kg")
  packagingId  String?  @map("packaging_id")
  imageUrl     String   @map("image_url")
  priceRupiah  Int      @map("price_rupiah")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  packaging Packaging? @relation(fields: [packagingId], references: [id], onDelete: SetNull)

  @@map("product_variants")
}

model Packaging {
  id        String   @id @map("id")
  name      String   @unique @map("name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  productVariants ProductVariant[]

  @@map("packagings")
}

model ProductType {
  id        String   @id @map("id")
  name      String   @unique @map("name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products Product[]

  @@map("product_types")
}
